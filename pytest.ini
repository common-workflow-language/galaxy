[pytest]
addopts = --doctest-continue-on-failure
log_level = DEBUG
python_classes =
python_paths = lib
markers =
  data_manager: marks test as a data_manager test
  tool: marks test as a tool test
  gtn_screenshot: marks test as a screenshot producer for galaxy training network
  local: mark indicates, that it's sufficient to run test locally to get relevant artifacts (e.g. screenshots)
  external: mark indicates, that test has to be run against external production server to get relevant artifacts (e.g. screenshots)
  red: test expected to fail
  green: test expected to pass
  command_line_tool: uses command_line_tool
  docker: uses docker
  env_var: uses env_var
  format_checking: uses format_checking
  initial_work_dir: uses initial_work_dir
  multiple_input: uses multiple_input
  resource: uses resource
  scatter: uses scatter
  schema_def: uses schema_def
  shell_command: uses shell_command
  subworkflow: uses subworkflow
  required: required for cwl conformance
  workflow: tests cwl workflow
  inline_javascript: uses inline_javascript cwl requirement
  expression_tool: uses expression_tool
  step_input: uses cwl step_input
  secondary_files: uses secondary_files
  multiple: uses multiple
  conditional: uses conditional
  cwl_conformance: all cwl conformance tests
  cwl_conformance_v1_0: cwl conformance tests for 1.0
  cwl_conformance_v1_1: cwl conformance tests for 1.1
  cwl_conformance_v1_2: cwl conformance tests for 1.2
